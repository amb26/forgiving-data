{
    type: "fluid.pipelines.WeCount-ODC",
    datasets: {
        WeCount: {
            sourceType: "git",
            repository: "https://github.com/inclusive-design/covid-assessment-centres",
            path: "WeCount/assessment_centre_data_collection_2020_09_02.csv",
        },
        ODC: {
            sourceType: "git",
            repository: "https://github.com/inclusive-design/covid-assessment-centres",
            path: "ODC/assessment_centre_locations_2021_02_10.csv" // interpolate from "latest" - invent JSON-R
        }
    },
    pipeline: {
        join: {
            type: "fluid.forgivingJoin",
            left: "WeCount",
            right: "ODC",
            outerRight: true,
            outputColumns: {
                location_name: "ODC.location_name",
                city:          "ODC.city",
                website:       "ODC.website",
                phone:         "ODC.phone",
                postal_code:   "ODC.postal_code",                
                address:       "ODC.address", 
                province:      "ODC.province",
                monday:        "ODC.monday",
                tuesday:       "ODC.tuesday",
                wednesday:     "ODC.wednesday",
                thursday:      "ODC.thursday",
                friday:        "ODC.friday",
                latitude:      "ODC.latitude",
                longitude:     "ODC.longitude",
                "Accessible Entrances": "WeCount.Wheelchair-accessible entrance",
                "Accessible Washrooms": "WeCount.Wheelchair-accessible bathrooms",
                "Accessible Parking":   "WeCount.Accessible parking",
                "Individual Service":   "WeCount.Personalized or individual service is offered",
                "Wait Accommodations":  "WeCount.Queue accomodations"
            },
            // TODO: output should actually be a pipe member, produce standard "gyre" semantics for pipe topology
        },
        output: {
            type: "fluid.fileOutput",
            input: "join",
            path: "outputData",
            output: "output.csv",
            provenance: "provenance.csv",
            provenanceMap: "provenanceMap.json"
        }
    }
}
